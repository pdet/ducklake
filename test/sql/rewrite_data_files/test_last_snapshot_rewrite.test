# name: test/sql/rewrite_data_files/test_last_snapshot_rewrite.test
# description: Test ducklake_rewrite_data_files
# group: [rewrite_data_files]

require ducklake

require parquet

statement ok
ATTACH 'ducklake:__TEST_DIR__/ducklake_rewrite_data.db' AS ducklake (DATA_PATH '__TEST_DIR__/ducklake_rewrite_data', METADATA_CATALOG 'ducklake_metadata')

statement ok
USE ducklake

# Start off with simple case
statement ok
CREATE TABLE test(key INTEGER, values VARCHAR);

statement ok
INSERT INTO test SELECT i, concat('thisisastring_', i) FROM range(10000) t(i)

# Let's do three rounds of deletions
statement ok
DELETE FROM test
WHERE key < 1000;

statement ok
DELETE FROM test
WHERE key > 9000;

statement ok
DELETE FROM test
WHERE key > 5000;

query II
SELECT snapshot_id, changes FROM snapshots();
----
0	{schemas_created=[main]}
1	{tables_created=[main.test]}
2	{tables_inserted_into=[1]}
3	{tables_deleted_from=[1]}
4	{tables_deleted_from=[1]}
5	{tables_deleted_from=[1]}

query I
SELECT delete_file is not null FROM ducklake_list_files('ducklake', 'test')
----
True

query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1
2
3

# This won't do much, since our default threshold is too high
statement ok
CALL ducklake_rewrite_data_files('ducklake', 'test');

query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1
2
3

statement ok
CALL ducklake_rewrite_data_files('ducklake', 'test', delete_threshold => 0.5);


# We are deleting more than one file, so we can get it out
query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1
2

query I
SELECT COUNT(*) from test
----
4001

# Let's do one more deletion to test the global setting
statement ok
CALL ducklake.set_option('compaction_delete_threshold_rewrite', 0.1)

statement ok
DELETE FROM test
WHERE key > 4000;

query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1
2
5

statement ok
CALL ducklake_rewrite_data_files('ducklake', 'test');

query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1

query I
SELECT COUNT(*) from test
----
3001

statement ok
DELETE FROM test
WHERE key = 3000;

statement ok
CALL ducklake_rewrite_data_files('ducklake', 'test');

query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1
2
7

# Test that a manual delete_threshold option has priority over the global value.
statement ok
CALL ducklake_rewrite_data_files('ducklake', 'test', delete_threshold => 0);

query I
SELECT delete_file_id FROM ducklake_metadata.ducklake_delete_file
----
1
2

# Try invalid values for threshold
statement error
CALL ducklake_rewrite_data_files('ducklake', 'test', delete_threshold => -1);
----
The delete_threshold option must be between 0 and 1

statement error
CALL ducklake.set_option('compaction_delete_threshold_rewrite', -1)
----
The compaction_delete_threshold_rewrite must be between 0 and 1

# Test cleanup
query I
SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_rewrite_data/**/*')
----
9

# delete the old files
statement ok
CALL ducklake_cleanup_old_files('ducklake', cleanup_all => true);

# all files have been compacted into one file
query I
SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_rewrite_data/**/*')
----
6

# Let's check every snapshot has the right answer
query II
SELECT snapshot_id, changes FROM snapshots();
----
0	{schemas_created=[main]}
1	{tables_created=[main.test]}
2	{tables_inserted_into=[1]}
3	{tables_deleted_from=[1]}
4	{tables_deleted_from=[1]}
5	{tables_deleted_from=[1]}
6	{}
7	{tables_deleted_from=[1]}
8	{}
9	{tables_deleted_from=[1]}
10	{}

query I
select count(*) from test AT (VERSION => 3);
----
9000

query I
select count(*) from test AT (VERSION => 4);
----
8001

query I
select count(*) from test AT (VERSION => 5);
----
4001

query I
select count(*) from test AT (VERSION => 6);
----
4001

query I
select count(*) from test AT (VERSION => 7);
----
3001

query I
select count(*) from test AT (VERSION => 8);
----
3001

query I
select count(*) from test AT (VERSION => 9);
----
3000

query I
select count(*) from test AT (VERSION => 10);
----
3000

# What if we have multiple files?

# Let's do partitions

# Many snapshots